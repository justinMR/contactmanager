{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0TAEMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,iBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAUL,EAAMK,SAASC,OAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAEzE,IAAK,cACD,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAE5C,IAAK,iBACD,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,QAAQD,GAAMD,EAAUN,EAAOQ,QAAWF,MAEhH,QACI,OAAOP,IAINa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACItB,MAAQ,CACJK,SAAU,GAEVwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAJlEe,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAQ0BC,IAAMC,IAAI,8CARpC,OAQcN,EARdE,EAAAK,KAUQ9B,KAAKY,SAAS,CAAEzB,SAAUoC,EAAIQ,OAVtC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAcQ,OACIiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OACzBkB,KAAKmC,MAAMC,cAhB5BzC,EAAA,CAA8B0C,aAsBjBC,EAAW5D,EAAQ4D,SCiBjBC,6MAzDXzD,MAAQ,CACJ0D,iBAAiB,KAGrBC,oDAAgB,SAAAnB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEPC,IAAMc,OAAN,8CAAAlD,OAA2DF,IAFpD,OAGRqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IAHpC,wBAAAmC,EAAAO,SAAAV,EAAAtB,yIAOP,IAAA2C,EAAA3C,KAAA4C,EAC8B5C,KAAKmC,MAAM9C,QAAtCC,EADHsD,EACGtD,GAAIuD,EADPD,EACOC,KAAMC,EADbF,EACaE,MAAOC,EADpBH,EACoBG,MACjBP,EAAoBxC,KAAKlB,MAAzB0D,gBAGR,OAEIP,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GAAS,IAEEL,EAAaK,EAAbL,SACR,OACIsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,uBACXf,EAAAb,EAAAc,cAAA,UAAKW,EACDZ,EAAAb,EAAAc,cAAA,KAAGe,QAAS,kBAAMN,EAAK/B,SAAS,CAAE4B,iBAAkBG,EAAK7D,MAAM0D,mBAAoBQ,UAAU,mBAAmBE,MAAO,CAAEC,OAAQ,aACjIlB,EAAAb,EAAAc,cAAA,KAAGc,UAAU,eAAeE,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OAASJ,QAASN,EAAKF,cAAca,KAAKX,EAAMrD,EAAIqB,KACnIsB,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAE,gBAAAhE,OAAkBF,IACtB2C,EAAAb,EAAAc,cAAA,KAAGc,UAAU,oBAAoBE,MAAO,CACpCC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPI,YAAa,YAIxBjB,EACGP,EAAAb,EAAAc,cAAA,MAAIc,UAAU,cACVf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,mBAAd,UAAwCF,GACxCb,EAAAb,EAAAc,cAAA,MAAIc,UAAU,mBAAd,UAAwCD,IAE5C,eA1CVV,aCwBPqB,mLArBP,OACIzB,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GAAS,IACE7B,EAAa6B,EAAb7B,SACR,OACI8C,EAAAb,EAAAc,cAACD,EAAAb,EAAMuC,SAAP,KACI1B,EAAAb,EAAAc,cAAA,MAAIc,UAAU,kBAAiBf,EAAAb,EAAAc,cAAA,QAAMc,UAAU,eAAhB,WAA/B,QACC7D,EAASO,IAAI,SAAAL,GAAO,OACjB4C,EAAAb,EAAAc,cAAC0B,EAAD,CACI7C,IAAK1B,EAAQC,GACbD,QAASA,gBAftBgD,sCCDjBwB,EAAiB,SAAAC,GAQjB,IAPFC,EAOED,EAPFC,MACAlB,EAMEiB,EANFjB,KACA7B,EAKE8C,EALF9C,MACAgD,EAIEF,EAJFE,YACAhF,EAGE8E,EAHF9E,KACAiF,EAEEH,EAFFG,SACAC,EACEJ,EADFI,MAEA,OACIjC,EAAAb,EAAAc,cAAA,OAAKc,UAAU,cACff,EAAAb,EAAAc,cAAA,SAAOiC,QAAStB,GAAOkB,GACvB9B,EAAAb,EAAAc,cAAA,SACIlD,KAAMA,EACN6D,KAAMA,EACNG,UAAWoB,IAAW,+BAAgC,CAClDC,aAAcH,IAElBF,YAAaA,EACbhD,MAAOA,EACPiD,SAAUA,IAEbC,GAASjC,EAAAb,EAAAc,cAAA,OAAKc,UAAU,oBAAoBkB,KAgBrDL,EAAeS,aAAe,CAC1BtF,KAAM,QAEK6E,QC0EAU,6MAhHXzF,MAAQ,CACJ+D,KAAM,GACNC,MAAO,GACPC,MAAO,GACPyB,OAAQ,MAEZC,+CAAW,SAAAnD,EAAOX,EAAU+D,GAAjB,IAAAC,EAAA9B,EAAAC,EAAAC,EAAA6B,EAAArD,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACP+C,EAAEG,iBADKF,EAIwB7E,EAAKhB,MAA5B+D,EAJD8B,EAIC9B,KAAMC,EAJP6B,EAIO7B,MAAOC,EAJd4B,EAIc5B,MAIR,KAATF,EARG,CAAApB,EAAAE,KAAA,eASH7B,EAAKc,SAAS,CACV4D,OAAQ,CACJ3B,KAAM,sBAXXpB,EAAAqD,OAAA,oBAiBO,KAAVhC,EAjBG,CAAArB,EAAAE,KAAA,eAkBH7B,EAAKc,SAAS,CACV4D,OAAQ,CACJ1B,MAAO,sBApBZrB,EAAAqD,OAAA,oBAyBO,KAAV/B,EAzBG,CAAAtB,EAAAE,KAAA,gBA0BH7B,EAAKc,SAAS,CACV4D,OAAQ,CACJzB,MAAO,sBA5BZtB,EAAAqD,OAAA,yBAkCDF,EAAa,CAEf/B,OACAC,QACAC,SAtCGtB,EAAAE,KAAA,GAyCWC,IAAMmD,KAAK,6CAA8CH,GAzCpE,QAyCDrD,EAzCCE,EAAAK,KA0CPnB,EAAS,CAAE3B,KAAM,cAAeO,QAASgC,EAAIQ,OAI7CjC,EAAKc,SAAS,CACViC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPyB,OAAQ,KAGZ1E,EAAKqC,MAAM6C,QAAQC,KAAK,KArDjB,yBAAAxD,EAAAO,SAAAV,EAAAtB,mEAuDXiE,SAAW,SAAAS,GAAC,OAAI5E,EAAKc,SAAL3B,OAAAiG,EAAA,EAAAjG,CAAA,GAAiByF,EAAES,OAAOtC,KAAO6B,EAAES,OAAOnE,iFAEjD,IAAA2B,EAAA3C,KAAAoF,EAEkCpF,KAAKlB,MAApC+D,EAFHuC,EAEGvC,KAAMC,EAFTsC,EAEStC,MAAOC,EAFhBqC,EAEgBrC,MAAOyB,EAFvBY,EAEuBZ,OAE5B,OACIvC,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GAAS,IACEL,EAAaK,EAAbL,SACR,OAAQsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACnBf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,eAAf,eACAf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACXf,EAAAb,EAAAc,cAAA,QAAMuC,SAAU9B,EAAK8B,SAASnB,KAAKX,EAAMhC,IACrCsB,EAAAb,EAAAc,cAACmD,EAAD,CACItB,MAAM,OACNlB,KAAK,OACLmB,YAAY,aACZhD,MAAO6B,EACPoB,SAAUtB,EAAKsB,SACfC,MAAOM,EAAO3B,OAElBZ,EAAAb,EAAAc,cAACmD,EAAD,CACItB,MAAM,QACNlB,KAAK,QACL7D,KAAK,QACLgF,YAAY,cACZhD,MAAO8B,EACPmB,SAAUtB,EAAKsB,SACfC,MAAOM,EAAO1B,QAElBb,EAAAb,EAAAc,cAACmD,EAAD,CACItB,MAAM,QACNlB,KAAK,QACLmB,YAAY,cACZhD,MAAO+B,EACPkB,SAAUtB,EAAKsB,SACfC,MAAOM,EAAOzB,QAGlBd,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,SAASgC,MAAM,cAAcgC,UAAU,wCAtG1DX,aC4HViD,6MA3HXxG,MAAQ,CACJ+D,KAAM,GACNC,MAAO,GACPC,MAAO,GACPyB,OAAQ,MAeZC,+CAAW,SAAAnD,EAAOX,EAAU+D,GAAjB,IAAAC,EAAA9B,EAAAC,EAAAC,EAAAwC,EAAAjG,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACP+C,EAAEG,iBADKF,EAIwB7E,EAAKhB,MAA5B+D,EAJD8B,EAIC9B,KAAMC,EAJP6B,EAIO7B,MAAOC,EAJd4B,EAIc5B,MAIR,KAATF,EARG,CAAApB,EAAAE,KAAA,eASH7B,EAAKc,SAAS,CACV4D,OAAQ,CACJ3B,KAAM,sBAXXpB,EAAAqD,OAAA,oBAiBO,KAAVhC,EAjBG,CAAArB,EAAAE,KAAA,eAkBH7B,EAAKc,SAAS,CACV4D,OAAQ,CACJ1B,MAAO,sBApBZrB,EAAAqD,OAAA,oBAyBO,KAAV/B,EAzBG,CAAAtB,EAAAE,KAAA,gBA0BH7B,EAAKc,SAAS,CACV4D,OAAQ,CACJzB,MAAO,sBA5BZtB,EAAAqD,OAAA,yBAkCDS,EAAa,CACf1C,OACAC,QACAC,SAEIzD,EAAOQ,EAAKqC,MAAMqD,MAAMC,OAAxBnG,GAvCDmC,EAAAE,KAAA,GAwCWC,IAAM8D,IAAN,8CAAAlG,OAAwDF,GAAKiG,GAxCxE,QAwCDhE,EAxCCE,EAAAK,KAyCPnB,EAAS,CAAC3B,KAAK,iBAAkBO,QAASgC,EAAIQ,OAG9CjC,EAAKc,SAAS,CACViC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPyB,OAAQ,KAGZ1E,EAAKqC,MAAM6C,QAAQC,KAAK,KAnDjB,yBAAAxD,EAAAO,SAAAV,EAAAtB,mEAqDXiE,SAAW,SAAAS,GAAC,OAAI5E,EAAKc,SAAL3B,OAAAiG,EAAA,EAAAjG,CAAA,GAAiByF,EAAES,OAAOtC,KAAO6B,EAAES,OAAOnE,qNAhE9C1B,EAAOU,KAAKmC,MAAMqD,MAAMC,OAAxBnG,YACUsC,IAAMC,IAAN,8CAAArC,OAAwDF,WAApEiC,SACAlC,EAAUkC,EAAIQ,KAEpB/B,KAAKY,SAAS,CACViC,KAAMxD,EAAQwD,KACdC,MAAOzD,EAAQyD,MACfC,MAAO1D,EAAQ0D,2IA2Dd,IAAAJ,EAAA3C,KAAAoF,EAEkCpF,KAAKlB,MAApC+D,EAFHuC,EAEGvC,KAAMC,EAFTsC,EAEStC,MAAOC,EAFhBqC,EAEgBrC,MAAOyB,EAFvBY,EAEuBZ,OAE5B,OACIvC,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GAAS,IACEL,EAAaK,EAAbL,SACR,OAAQsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACnBf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,eAAf,gBACAf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACXf,EAAAb,EAAAc,cAAA,QAAMuC,SAAU9B,EAAK8B,SAASnB,KAAKX,EAAMhC,IACrCsB,EAAAb,EAAAc,cAACmD,EAAD,CACItB,MAAM,OACNlB,KAAK,OACLmB,YAAY,aACZhD,MAAO6B,EACPoB,SAAUtB,EAAKsB,SACfC,MAAOM,EAAO3B,OAElBZ,EAAAb,EAAAc,cAACmD,EAAD,CACItB,MAAM,QACNlB,KAAK,QACL7D,KAAK,QACLgF,YAAY,cACZhD,MAAO8B,EACPmB,SAAUtB,EAAKsB,SACfC,MAAOM,EAAO1B,QAElBb,EAAAb,EAAAc,cAACmD,EAAD,CACItB,MAAM,QACNlB,KAAK,QACLmB,YAAY,cACZhD,MAAO+B,EACPkB,SAAUtB,EAAKsB,SACfC,MAAOM,EAAOzB,QAGlBd,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,SAASgC,MAAM,iBAAiBgC,UAAU,wCAjH5DX,aCDpBsD,EAAS,SAACxD,GAAU,IACdyD,EAAazD,EAAbyD,SACR,OACI3D,EAAAb,EAAAc,cAAA,OAAKc,UAAU,+DACXf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACXf,EAAAb,EAAAc,cAAA,KAAG2D,KAAK,IAAI7C,UAAU,gBACjB4C,GAEL3D,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,MAAIc,UAAU,sBACVf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACVf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YACnBf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,gBADjB,UAIJf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACVf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAC9Bf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,gBADjB,SAGJf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACVf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YACxBf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,oBADjB,gBAU5B2C,EAAOrB,aAAe,CAClBsB,SAAU,UAOCD,QCzCAG,EAAA,WACX,OACI7D,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,MAAIc,UAAU,aAAd,yBACAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,QAAb,iCACAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,kBAAb,mBCLG+C,EAAA,WACX,OACI9D,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YAAWf,EAAAb,EAAAc,cAAA,QAAMc,UAAU,eAAhB,OAAzB,mBACAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,QAAb,yCCyBGgD,6MA3BXlH,MAAQ,CACJmH,MAAO,GACPC,KAAM,uFAGU,IAAAvD,EAAA3C,KAChBmG,MAAM,gDACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAArE,GAAI,OAAIY,EAAK/B,SAAS,CACxBqF,MAAOlE,EAAKkE,MACZC,KAAMnE,EAAKmE,0CAOd,IAAAvB,EAEiB3E,KAAKlB,MAApBmH,EAFFtB,EAEEsB,MAAOC,EAFTvB,EAESuB,KACd,OAAOjE,EAAAb,EAAAc,cAAA,WACHD,EAAAb,EAAAc,cAAA,UAAK+D,GACLhE,EAAAb,EAAAc,cAAA,SAAIgE,WAvBG7D,aCsCJkE,gMAtBX,OACEtE,EAAAb,EAAAc,cAACsE,EAAD,KACEvE,EAAAb,EAAAc,cAACuE,EAAA,EAAD,KACExE,EAAAb,EAAAc,cAAA,OAAKc,UAAU,OACbf,EAAAb,EAAAc,cAACwE,EAAD,CAAQd,SAAS,oBACjB3D,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAACyE,EAAA,EAAD,KACE1E,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrD,IACjCzB,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWxC,IAC5CtC,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWzB,IACjDrD,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWjB,IACtC7D,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWf,IACrC/D,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,CAAOG,UAAWhB,gBAfhB1D,cCJE2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3B,MACvB,2DCbN4B,IAASC,OAAOpF,EAAAb,EAAAc,cAACoF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC","file":"static/js/main.7bfa9743.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({ contacts: res.data });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\n//this is a class component!!!\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n\r\n       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n\r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n\r\n        return (\r\n\r\n            <Consumer>\r\n                {value => {\r\n\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name}\r\n                                <i onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })} className=\"fas fa-sort-down\" style={{ cursor: 'pointer' }}></i>\r\n                                <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\" style={{\r\n                                        cursor: 'pointer',\r\n                                        float: 'right',\r\n                                        color: 'black',\r\n                                        marginRight: '1rem'\r\n                                    }}></i>\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>\r\n                            ) : null}\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span>List</h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n            type={type}\r\n            name={name}\r\n            className={classnames('form-control form-control-lg', {\r\n                'is-invalid': error\r\n            })}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for errors\r\n\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: {\r\n                    name: 'Name is required'\r\n                }\r\n            })\r\n\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: {\r\n                    email: 'Name is required'\r\n                }\r\n            })\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: {\r\n                    phone: 'Name is required'\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            // id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n\r\n\r\n        //Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (<div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                <TextInputGroup\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.name}\r\n                                />\r\n                                <TextInputGroup\r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    value={email}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.email}\r\n                                />\r\n                                <TextInputGroup\r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    placeholder=\"Enter Phone\"\r\n                                    value={phone}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.phone}\r\n                                />\r\n\r\n                                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>)\r\n                }}\r\n            </Consumer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n\r\n    }\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for errors\r\n\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: {\r\n                    name: 'Name is required'\r\n                }\r\n            })\r\n\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: {\r\n                    email: 'Name is required'\r\n                }\r\n            })\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: {\r\n                    phone: 'Name is required'\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n        dispatch({type:'UPDATE_CONTACT', payload: res.data});\r\n\r\n        //Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (<div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Edit Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                <TextInputGroup\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.name}\r\n                                />\r\n                                <TextInputGroup\r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    value={email}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.email}\r\n                                />\r\n                                <TextInputGroup\r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    placeholder=\"Enter Phone\"\r\n                                    value={phone}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.phone}\r\n                                />\r\n\r\n                                <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>)\r\n                }}\r\n            </Consumer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//this is a functional component!!\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"nav navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"></i> Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"></i> About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist >:(</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                body: data.body \r\n            }))\r\n    }\r\n    // componentWillMount() {\r\n    //     console.log('componentwillmount...');\r\n    // }\r\n\r\n    render() {\r\n\r\n        const {title, body} = this.state;\r\n        return <div>\r\n            <h1>{title}</h1>\r\n            <p>{body}</p>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport { Provider } from './context';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}